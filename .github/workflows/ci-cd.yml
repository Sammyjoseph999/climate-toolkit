name: CI/CD Pipeline

permissions:
  contents: write
  pull-requests: write

on:
  push:
    branches: [staging, main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
        r-version: [4.3]

    steps:
      - uses: actions/checkout@v4

      # Setup Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f setup.py ]; then pip install -e .; fi
          if [ -f pyproject.toml ]; then pip install -e .; fi

      # Setup R
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}

      # Install R dependencies
      - name: Install R dependencies
        run: |
          install.packages(c("testthat", "devtools", "roxygen2"))
          if (file.exists("DESCRIPTION")) {
            devtools::install_deps(dependencies = TRUE)
          }
        shell: Rscript {0}

      # Run Python tests
      - name: Run Python tests with pytest
        run: |
          if [ -d "tests" ] && find tests -name "*.py" -type f | grep -q .; then
            pytest tests/ -v --tb=short
          else
            echo "No Python test files found in tests directory"
          fi

      # Run R tests
      - name: Run R tests with testthat
        run: |
          if (dir.exists("tests") && length(list.files("tests", pattern = "\\.[rR]$", recursive = TRUE)) > 0) {
            library(testthat)
            test_dir("tests")
          } else {
            cat("No R test files found in tests directory")
          }
        shell: Rscript {0}

  create-pr-to-main:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/staging'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for differences
        id: check_diff
        run: |
          git fetch origin main:main
          if git diff --quiet staging main; then
            echo "No differences found between staging and main"
            echo "create_pr=false" >> $GITHUB_OUTPUT
          else
            echo "Differences found between staging and main"
            echo "create_pr=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.check_diff.outputs.create_pr == 'true'
        run: |
          prs=$(gh pr list --base main --head staging --json number,title,url)
          if [[ -n "$prs" ]]; then
            echo "Pull request already exists. Updating existing PR..."
            echo "$prs"
            echo "Changes have been added to the current PR"
          else
            echo "Creating new pull request..."
            gh pr create \
              --title "PR: Staging to Main" \
              --body "Automated pull request from ${{ github.ref_name }} to ${{ github.event.pull_request.base.ref }}.

            All tests have passed in staging branch.

            **Changes:**
            - Latest changes from staging branch

            **Test Status:** 
            - All tests passed" \
              --base main \
              --head staging \
              --assignee Sammyjoseph999 \
              --reviewer Sammyjoseph999
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
